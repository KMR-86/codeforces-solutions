/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int>ans;
    void prepare_ans(TreeNode *root){
        if(root!=nullptr){
            increasingBST(root->left);
            ans.push_back(root->val);
            increasingBST(root->right);
        
        }
        
        
    }
    TreeNode* increasingBST(TreeNode* root) {
        prepare_ans(root);
        TreeNode *a,*t;
        a=new TreeNode();
        t=a;
        for(int i=0;i<ans.size();i++)
        {
            t->val=ans[i];
            if(i!=ans.size()-1){
                t->right=new TreeNode();
                t->left=nullptr;
                t=t->right;
            }
            
        }
        return a;
    }
};