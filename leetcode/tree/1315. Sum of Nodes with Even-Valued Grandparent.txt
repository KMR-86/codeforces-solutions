/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int ans=0;
    int even_sum(TreeNode* root,TreeNode *p,TreeNode* gp){
        if(gp==nullptr || root==nullptr || p==nullptr)return 0;
        
        if(gp->val%2==0){
            return root->val+even_sum(root->left,root,p)+even_sum(root->right,root,p);
        }
        else{
            return even_sum(root->left,root,p)+even_sum(root->right,root,p);
        }
        
    }
    int sumEvenGrandparent(TreeNode* root) {
        if(root==nullptr)return 0;
        int ans=0;
        if(root->left!=nullptr){
            ans=ans+even_sum(root->left->left,root->left,root);
            ans=ans+even_sum(root->left->right,root->left,root);
        }
        
        if(root->right!=nullptr){
            ans=ans+even_sum(root->right->left,root->right,root);
            ans=ans+even_sum(root->right->right,root->right,root);
        }
        return ans;
    }
};